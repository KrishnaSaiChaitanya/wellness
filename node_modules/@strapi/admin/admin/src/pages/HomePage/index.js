/*
 * HomePage
 *
 */

import React, { useEffect, useMemo, useState } from 'react';

import { Box, Grid, GridItem, Layout, Main , Flex, Typography} from '@strapi/design-system';
import { Link, LinkButton } from '@strapi/design-system/v2';
import { LoadingIndicatorPage, useGuidedTour } from '@strapi/helper-plugin';
import { Helmet } from 'react-helmet';
import { FormattedMessage } from 'react-intl';
import { useHistory } from 'react-router-dom';
import styled from 'styled-components';

import GuidedTourHomepage from '../../components/GuidedTour/Homepage';
import isGuidedTourCompleted from '../../components/GuidedTour/utils/isGuidedTourCompleted';
import { useContentTypes } from '../../hooks/useContentTypes';
import { useEnterprise } from '../../hooks/useEnterprise';

import cornerOrnamentPath from './assets/corner-ornament.svg';
import ContentBlocks from './ContentBlocks';
import HomeHeader from './HomeHeader';
import SocialLinks from './SocialLinks';
import { ExternalLink } from '@strapi/icons';
// import styled from 'styled-components';

const LogoContainer = styled(Box)`
  position: absolute;
  top: 0;
  right: 0;

  img {
    width: ${150 / 16}rem;
  }
`;
  
export const HomePageCE = () => {
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [ownersCount, setOwnersCount] = useState(0);
  const [breedersCount, setBreedersCount] = useState(0);
  const [veterinariansCount, setVeterinariansCount] = useState(0);
  const [testKitsCount, setTestKitsCount] = useState(0);
  const [testsCount, setTestsCount] = useState(0);
  const [trainersCount, setTrainersCount] = useState(0);
  const [url, seturl] = useState(["https://res.cloudinary.com/dsfems7vy/image/upload/v1691442511/large_horse_9d7cf695b1.jpg"]);
  


  useEffect(() => {
    const apiUrl = 'http://localhost:1337/api/results';
    fetch(apiUrl)
      .then(response => response.json())
      .then(data => {
        setData(data.data);
        console.log(data, "this is data");
        console.log(data.data[0].horse_info.image.formats.large.url, "img url");
        seturl([data.data[0].horse_info.image.formats.large.url, data.data[1].horse_info.image.formats.large.url, data.data[2].horse_info.image.formats.large.url, data.data[3].horse_info.image.formats.large.url, data.data[4].horse_info.image.formats.large.url, data.data[5].horse_info.image.formats.large.url, data.data[2].horse_info.image.formats.large.url])
        seturl2(data.data[1].horse_info.image.formats.large.url);
        seturl3(data.data[2].horse_info.image.formats.large.url)
        seturl4(data.data[3].horse_info.image.formats.large.url)
        seturl5(data.data[4].horse_info.image.formats.large.url)
        seturl6(data.data[5].horse_info.image.formats.large.url)
        console.log(data.data[0].horse_info.image.formats, "img url");
        setLoading(false);
      })
      .catch(error => {
        setError(error);
        setLoading(false);
      });
     const fetchData = async () => {
      try {
        const ownersResponse = await fetch('http://localhost:1337/api/owners');
        const ownersData = await ownersResponse.json();
        console.log(ownersData, "this is data");
        setOwnersCount(ownersData.data.length);

        const breedersResponse = await fetch('http://localhost:1337/api/breeders');
        const breedersData = await breedersResponse.json();
        setBreedersCount(breedersData.data.length);

        const veterinariansResponse = await fetch('http://localhost:1337/api/veterinarians');
        const veterinariansData = await veterinariansResponse.json();
        setVeterinariansCount(veterinariansData.data.length);

        const testKitsResponse = await fetch('http://localhost:1337/api/test-kits');
        const testKitsData = await testKitsResponse.json();
        setTestKitsCount(testKitsData.data.length);

        const testsResponse = await fetch('http://localhost:1337/api/horse-infos');
        const testsData = await testsResponse.json();
        setTestsCount(testsData.data.length);

        const trainersResponse = await fetch('http://localhost:1337/api/trainers'); // New API endpoint
        const trainersData = await trainersResponse.json();
        setTrainersCount(trainersData.data.length);
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };

    fetchData();
  }, []); 

  const { collectionTypes, singleTypes, isLoading: isLoadingForModels } = useContentTypes();
  const { guidedTourState, isGuidedTourVisible, isSkipped } = useGuidedTour();
  const showGuidedTour =
    !isGuidedTourCompleted(guidedTourState) && isGuidedTourVisible && !isSkipped;
  const { push } = useHistory();
  const handleClick = (e) => {
    e.preventDefault();
    push('/plugins/content-type-builder/content-types/create-content-type');
  };
  const GridGap = styled(Grid)`
  row-gap: ${({ theme }) => theme.spaces[2]};
  column-gap: ${({ theme }) => theme.spaces[4]};
`;


  // const hasAlreadyCreatedContentTypes = useMemo(() => {
  //   const filterContentTypes = (contentTypes) => contentTypes.filter((c) => c.isDisplayed);

  //   return (
  //     filterContentTypes(collectionTypes).length > 1 || filterContentTypes(singleTypes).length > 0
  //   );
  // }, [collectionTypes, singleTypes]);

  if (isLoadingForModels) {
    return <LoadingIndicatorPage />;
  }

  return (
    <Layout>
      <FormattedMessage id="HomePage.helmet.title" defaultMessage="Homepage">
        {(title) => <Helmet title={title[0]} />}
      </FormattedMessage>
      <Main>
        <LogoContainer>
          <img alt="" aria-hidden src={cornerOrnamentPath} />
        </LogoContainer>
        <Box padding={10}>
          <Grid>
            <GridItem col={8} s={12}>
              <HomeHeader
                onCreateCT={handleClick}
                hasCreatedContentType={true}
              />
            </GridItem>
          </Grid>
          <Grid gap={6}>
            <GridItem col={7} s={12}>
             <Grid gap={6}>
           <GridItem col={6} s={12}>
                  <Box style={{borderRadius: "30px"}}
      as="aside"
      aria-labelledby="join-the-community"
      background="neutral0"
      hasRadius
      paddingRight={5}
      paddingLeft={5}
      paddingTop={6}
      paddingBottom={6}
      shadow="tableShadow"
    >
      <Box >
         <Typography variant="delta" as="h2" id="join-the-community" style={{color:"#006fba", fontWeight: "600", fontSize: "1.5rem" }}>
             Owners
            </Typography>
              <p style={{fontWeight: "700", fontSize: "1.9rem", padding: "14px"}}> {ownersCount} </p>
              <Link style ={{fontWeight: "600"}} href="http://localhost:8000/admin/content-manager/collectionType/api::owner.owner" isExternal endIcon={<ExternalLink />}>
            View More
          </Link>
      </Box></Box>
              </GridItem>
                 <GridItem col={6} s={12}>
                  <Box style={{borderRadius: "30px"}}
      as="aside"
      aria-labelledby="join-the-community"
      background="neutral0"
      hasRadius
      paddingRight={5}
      paddingLeft={5}
      paddingTop={6}
      paddingBottom={6}
      shadow="tableShadow"
    >
      <Box >
         <Typography variant="delta" as="h2" id="join-the-community" style={{color:"#006fba", fontWeight: "600", fontSize: "1.5rem" }}>
              Trainers
            </Typography>
              <p style={{fontWeight: "700", fontSize: "1.9rem", padding: "14px"}}>{trainersCount} </p>
             <Link style ={{fontWeight: "600"}} href="http://localhost:8000/admin/content-manager/collectionType/api::trainer.trainer" isExternal endIcon={<ExternalLink />}>
            View More
          </Link>
      </Box></Box>
              </GridItem>
               <GridItem col={6} s={12}>
                  <Box style={{borderRadius: "30px"}}
      as="aside"
      aria-labelledby="join-the-community"
      background="neutral0"
      hasRadius
      paddingRight={5}
      paddingLeft={5}
      paddingTop={6}
      paddingBottom={6}
      shadow="tableShadow"
    >
      <Box >
         <Typography variant="delta" as="h2" id="join-the-community" style={{color:"#006fba", fontWeight: "600", fontSize: "1.5rem" }}>
              Veternerians
            </Typography>
              <p style={{fontWeight: "700", fontSize: "1.9rem", padding: "14px"}}> {veterinariansCount}</p>
              <Link style ={{fontWeight: "600"}} href="http://localhost:8000/admin/content-manager/collectionType/api::veterinarian.veterinarian" isExternal endIcon={<ExternalLink />}>
            View More
          </Link>
      </Box></Box>
              </GridItem>
                <GridItem col={6} s={12}>
                  <Box style={{borderRadius: "30px"}}
      as="aside"
      aria-labelledby="join-the-community"
      background="neutral0"
      hasRadius
      paddingRight={5}
      paddingLeft={5}
      paddingTop={6}
      paddingBottom={6}
      shadow="tableShadow"
    >
      <Box >
         <Typography variant="delta" as="h2" id="join-the-community" style={{color:"#006fba", fontWeight: "600", fontSize: "1.5rem" }}>
              Breeders
            </Typography>
              <p style={{fontWeight: "700", fontSize: "1.9rem", padding: "14px"}}> {breedersCount} </p>
              <Link style ={{fontWeight: "600"}} href="http://localhost:8000/admin/content-manager/collectionType/api::breeder.breeder" isExternal endIcon={<ExternalLink />}>
            View More
          </Link>
      </Box></Box>
              </GridItem>
                <GridItem col={6} s={12}>
                  <Box style={{borderRadius: "30px"}}
      as="aside"
      aria-labelledby="join-the-community"
      background="neutral0"
      hasRadius
      paddingRight={5}
      paddingLeft={5}
      paddingTop={6}
      paddingBottom={6}
      shadow="tableShadow"
    >
      <Box >
         <Typography variant="delta" as="h2" id="join-the-community" style={{color:"#006fba", fontWeight: "600", fontSize: "1.5rem" }}>
              Test Kits
            </Typography>
              <p style={{fontWeight: "700", fontSize: "1.9rem", padding: "14px"}}> {testKitsCount} </p>
               <Link style ={{fontWeight: "600"}} href="http://localhost:8000/admin/content-manager/collectionType/api::test-kit.test-kit" isExternal endIcon={<ExternalLink />}>
            View More
          </Link>
      </Box></Box>
              </GridItem>
               <GridItem col={6} s={12}>
                  <Box style={{borderRadius: "30px"}}
      as="aside"
      aria-labelledby="join-the-community"
      background="neutral0"
      hasRadius
      paddingRight={5}
      paddingLeft={5}
      paddingTop={6}
      paddingBottom={6}
      shadow="tableShadow"
    >
      <Box >
         <Typography variant="delta" as="h2" id="join-the-community" style={{color:"#006fba", fontWeight: "600", fontSize: "1.5rem" }}>
              Registred Horses
            </Typography>
              <p style={{fontWeight: "700", fontSize: "1.9rem", padding: "14px"}}> {testsCount} </p>
              <Link style ={{fontWeight: "600"}} href="http://localhost:8000/admin/content-manager/collectionType/api::horse-info.horse-info" isExternal endIcon={<ExternalLink />}>
            View More
          </Link>
      </Box></Box>
              </GridItem>
             </Grid>
            </GridItem>
            <GridItem col={5} s={12}>
               <Box style={{borderRadius: "30px"}}
      as="aside"
      aria-labelledby="join-the-community"
      background="neutral0"
      hasRadius
      paddingRight={5}
      paddingLeft={5}
      paddingTop={6}
      paddingBottom={6}
      shadow="tableShadow"
    >
      <Box>
      <Typography variant="delta" as="h2" id="join-the-community" style={{color:"#006fba", fontWeight: "600", fontSize: "1.5rem" }}>
              Test Data
            </Typography>
      </Box>
      <GridGap style = {{padding: "20px"}}>
        {data.slice(0, 6).map((item , id) => {
          return (
            <GridItem col={12} s={12} key={item.id} style={{display: "flex", alignItems: "center", padding: "11px"}}>
            <img src={"https://res.cloudinary.com/dsfems7vy/image/upload/v1691442511/large_horse_9d7cf695b1.jpg img url"} style={{height: "44px", borderRadius: "30px"}}/>
            <span style={{padding: "1px 75px", fontSize: "1.2rem"}}>{item.horse_info.barn_name}</span>
            {item.status == "Verified" && <span style={{color: "green", border: "1px solid green", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Pending" && <span style={{color: "orange", border: "1px solid orange", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Remarks" && <span style={{color: "red", border: "1px solid red", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            </GridItem>
          );
        })}
         {/* <GridItem col={12} s={12} key={item.id} style={{display: "flex", alignItems: "center", padding: "11px"}}>
            <img src={data[0].horse_info.image.formats.large.url} style={{height: "44px", borderRadius: "30px"}}/>
            <span style={{padding: "1px 75px", fontSize: "1.2rem"}}>{data[0].horse_info.barn_name}</span>
            {item.status == "Verified" && <span style={{color: "green", border: "1px solid green", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Pending" && <span style={{color: "orange", border: "1px solid orange", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Remarks" && <span style={{color: "red", border: "1px solid red", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            </GridItem> <GridItem col={12} s={12} key={item.id} style={{display: "flex", alignItems: "center", padding: "11px"}}>
            <img src={url[id + 1]} style={{height: "44px", borderRadius: "30px"}}/>
            <span style={{padding: "1px 75px", fontSize: "1.2rem"}}>{item.horse_info.barn_name}</span>
            {item.status == "Verified" && <span style={{color: "green", border: "1px solid green", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Pending" && <span style={{color: "orange", border: "1px solid orange", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Remarks" && <span style={{color: "red", border: "1px solid red", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            </GridItem> <GridItem col={12} s={12} key={item.id} style={{display: "flex", alignItems: "center", padding: "11px"}}>
            <img src={url[id + 1]} style={{height: "44px", borderRadius: "30px"}}/>
            <span style={{padding: "1px 75px", fontSize: "1.2rem"}}>{item.horse_info.barn_name}</span>
            {item.status == "Verified" && <span style={{color: "green", border: "1px solid green", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Pending" && <span style={{color: "orange", border: "1px solid orange", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Remarks" && <span style={{color: "red", border: "1px solid red", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            </GridItem> <GridItem col={12} s={12} key={item.id} style={{display: "flex", alignItems: "center", padding: "11px"}}>
            <img src={url[id + 1]} style={{height: "44px", borderRadius: "30px"}}/>
            <span style={{padding: "1px 75px", fontSize: "1.2rem"}}>{item.horse_info.barn_name}</span>
            {item.status == "Verified" && <span style={{color: "green", border: "1px solid green", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Pending" && <span style={{color: "orange", border: "1px solid orange", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Remarks" && <span style={{color: "red", border: "1px solid red", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            </GridItem> <GridItem col={12} s={12} key={item.id} style={{display: "flex", alignItems: "center", padding: "11px"}}>
            <img src={url[id + 1]} style={{height: "44px", borderRadius: "30px"}}/>
            <span style={{padding: "1px 75px", fontSize: "1.2rem"}}>{item.horse_info.barn_name}</span>
            {item.status == "Verified" && <span style={{color: "green", border: "1px solid green", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Pending" && <span style={{color: "orange", border: "1px solid orange", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Remarks" && <span style={{color: "red", border: "1px solid red", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            </GridItem> <GridItem col={12} s={12} key={item.id} style={{display: "flex", alignItems: "center", padding: "11px"}}>
            <img src={url[id + 1]} style={{height: "44px", borderRadius: "30px"}}/>
            <span style={{padding: "1px 75px", fontSize: "1.2rem"}}>{item.horse_info.barn_name}</span>
            {item.status == "Verified" && <span style={{color: "green", border: "1px solid green", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Pending" && <span style={{color: "orange", border: "1px solid orange", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Remarks" && <span style={{color: "red", border: "1px solid red", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            </GridItem> <GridItem col={12} s={12} key={item.id} style={{display: "flex", alignItems: "center", padding: "11px"}}>
            <img src={url[id + 1]} style={{height: "44px", borderRadius: "30px"}}/>
            <span style={{padding: "1px 75px", fontSize: "1.2rem"}}>{item.horse_info.barn_name}</span>
            {item.status == "Verified" && <span style={{color: "green", border: "1px solid green", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Pending" && <span style={{color: "orange", border: "1px solid orange", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            
            {item.status == "Remarks" && <span style={{color: "red", border: "1px solid red", padding: "4px", borderRadius: "10px"}} key={item.id}>{item.status}</span>}
            </GridItem> */}
         <ul>
        {/* {data.map(item => (
          <li key={item.id}>{item.name}</li>
        ))} */}
      </ul>
      </GridGap>
      <Link style ={{fontWeight: "600", display: "flex", justifyContent: "center"}} href="http://localhost:8000/admin/content-manager/collectionType/api::result.result" isExternal endIcon={<ExternalLink />}>
            View More
          </Link>
    </Box>
            </GridItem>
          </Grid>
        </Box>
      </Main>
    </Layout>
  );
};

function HomePageSwitch() {
  const HomePage = useEnterprise(
    HomePageCE,
    // eslint-disable-next-line import/no-cycle
    async () => (await import('../../../../ee/admin/pages/HomePage')).HomePageEE
  );

  // block rendering until the EE component is fully loaded
  if (!HomePage) {
    return null;
  }

  return <HomePage />;
}

export default HomePageSwitch;
